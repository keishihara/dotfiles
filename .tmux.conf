# .tmux.conf

#---------------------------------------
#              General
#---------------------------------------

# Prefix
set-option -g prefix C-b

# Reload tmux.conf
bind-key r source-file ~/.tmux.conf \; display "Reloading .tmux.conf!!!!x3000"

# Close tmux
bind C-q kill-session

# Extend display panes time
set display-panes-time 10000

# Extend repeat time
set repeat-time 1000

# Starting number for penes and windows
set-option -g base-index 0
set-window-option -g pane-base-index 0

# The maximum line number of window history
set-option -g history-limit 5000

# Set the sizes of main pane height and width
set-window-option -g main-pane-height 55
set-window-option -g main-pane-width 200

# Colaborate with vim
# The following enables Esc to perform rapidly in vim
set -s escape-time 0

# Smart pane switching with awareness of vim splits
# http://qiita.com/izumin5210/items/92fd7425999980f9516d
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"


#---------------------------------------
#              Copy mode
#---------------------------------------

# # Vi-like copy mode key binds
set-window-option -g mode-keys vi

# # Start copy mode wiht Prefix+v
bind-key v copy-mode \; display "Copy mode!"

# set -g default-shell $SHELL
# # set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Prefix+Enter/y for copying
bind-key -T copy-mode-vi v     send-keys -X begin-selection \; display "Begin copying!!"
# xclip is not working?
bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard" \; display "Copied!!"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard" \; display "Copied!!"

# Prefix+p for pasting
bind-key p paste-buffer

# Now copying function relies on following:
# How to share tmux clipboard with your system: https://www.seanh.cc/2020/12/27/copy-and-paste-in-tmux/
set -g mouse on

# These bindings are for X Windows only. If you're using a different
# window system you have to replace the `xsel` commands with something
# else. See https://github.com/tmux/tmux/wiki/Clipboard#available-tools
bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe-no-clear'
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'



#---------------------------------------
#               Pane
#---------------------------------------

# Divide a window (generate a pane) horizontally (Prefix+-) and vertically (Prefix+|)
bind-key | split-window -h
bind-key - split-window -v

# Prefix + Ctrl-h/l for switching panes
# Prefix + Ctrl-h,h,h,h,...
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Ctrl-o also allows us to switch panes without prefix
#bind-key -n C-o select-pane -t :.+

# Prefix+hjkl for moving from current pane to another pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Prefix+JKHL for resizing a pane
# Prefix+J,J,J,J,...
bind-key -r H resize-pane -L 1
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r L resize-pane -R 1


#---------------------------------------
#               Mouse
#---------------------------------------
# Enable copy mode with the mouse
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M



#---------------------------------------
#             Status bar
#---------------------------------------
# Reload status bar every second
set-option -g status-interval 1

# ?
# set-option -g default-terminal screen-256color
# ?
# set -g terminal-overrides 'xterm:colors=256'
# window-status format in current window
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


# window-status を中央揃えで配置する
# align window-status centered
set-option -g status-justify "centre"

# background colour of status bar
set-option -g status-bg "colour236"

# foreground colour (text colour) of status bar
set-option -g status-fg "colour255"

# status-left max length
set-option -g status-left-length 20

# status-left format
set-option -g status-left "#[fg=colour235,bg=colour70,bold]Session: #S #[default]"

# status-right max length
set-option -g status-right-length 100

# status-right format
set-option -g status-right "#[fg=colour235,bg=colour70]#(whoami)@#h #[default]#[fg=colour235,bg=colour70]| LA: #(cut -d' ' -f-3 /proc/loadavg) | %m/%d %H:%M:%S#[default]"

# window-status format
set-window-option -g window-status-format " #I: #W "

# window-status format in current window
set-window-option -g window-status-current-format "#[fg=colour235,bg=colour201,bold] #I: #W #[default]"


#---------------------------------------
#             Appearance
#---------------------------------------

# default/active window title colors
set-window-option -g window-status-style fg=cyan,bg=default,dim,fg=brightblue,bg=default
set-window-option -g window-status-current-style fg=white,bg=red,bright,fg=brightred,bg=default

# default/active window background colours
# set-option -g window-style 'bg=#444444'
set-option -g window-style 'bg=#000000'
# set-option -g window-active-style 'bg=#000000' # fg is default color

# pane border
set-option -g pane-border-style fg=colour8,fg=colour8
set-option -g pane-active-border-style fg=blue,fg=brightgreen

# message text
set-option -g message-style fg=white,bg=black,bright,bg=black,fg=brightred

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
